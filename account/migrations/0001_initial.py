# Generated by Django 3.2.9 on 2022-02-12 08:44

import account.managers
import ckeditor_uploader.fields
import config.validators
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_author', models.BooleanField(default=False, verbose_name='Is author')),
                ('is_seller', models.BooleanField(default=False, verbose_name='Is Supplier')),
                ('is_brand', models.BooleanField(default=False, verbose_name='Is brand')),
                ('is_entrepreneur', models.BooleanField(default=False, verbose_name='Is Entrepreneur')),
                ('about_manager_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='about_manager')),
                ('about_manager_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='about_manager')),
                ('about_manager_it', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='about_manager')),
                ('manager_photo', models.ImageField(blank=True, null=True, upload_to='', validators=[config.validators.validate_file_size])),
                ('company_name', models.CharField(blank=True, max_length=50)),
                ('co_address', models.TextField(blank=True, max_length=200)),
                ('co_country_registered', models.CharField(blank=True, max_length=50, null=True)),
                ('co_website_address', models.CharField(blank=True, help_text='example.exm', max_length=60, null=True)),
                ('co_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('telephone_number', models.CharField(blank=True, max_length=11, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='Your entered phone number is not valid', regex='^[ 0-9]+$')])),
                ('brand_name', models.CharField(blank=True, max_length=120)),
                ('about_brand_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='about_brand')),
                ('about_brand_ru', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='about_brand')),
                ('about_brand_it', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='about_brand')),
                ('brand_logo', models.ImageField(blank=True, upload_to='user/brand-logo', validators=[config.validators.validate_file_size])),
                ('branch_address', models.TextField(blank=True, max_length=200)),
                ('branch_image', models.ImageField(blank=True, upload_to='user/branch-image', validators=[config.validators.validate_file_size])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.managers.CustomUserManager()),
            ],
        ),
    ]
